{"version":3,"sources":["components/LineChartPage.js","components/LeftNavBar.js","components/BarChartPage.js","components/HorizontalBarChartPage.js","components/PieChartPage.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["LineChartPage","_Component","Object","inherits","_super","createSuper","props","_this","classCallCheck","this","call","state","dataFirstChart","labels","datasets","label","backgroundColor","data","optionsFirstChart","legend","position","responsive","scales","yAxes","ticks","beginAtZero","tooltips","mode","intersect","dataSecondChart","borderWidth","optionsSecondChart","fontFamily","fontSize","chartData_3","chartOptions_3","fontColor","chartData_4","type","yAxisID","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointStyle","pointRadius","pointHoverRadius","fill","chartOptions_4","title","display","text","hover","xAxes","stacked","fontStyle","id","gridLines","drawOnChartArea","max","min","stepSize","createClass","key","value","react_default","a","createElement","es","options","Component","LeftNavBar","apply","arguments","classes","className","navBarStyles","href","navSpanStyle","injectSheet","color","width","& a","verticalAlign","BarChartPage","getRandomInt","Math","floor","random","enabled","scaleLabel","plugins","chart2Data","chart2Options","fullWidth","boxWidth","padding","barPercentage","drawTicks","tickMarkLength","callback","index","labelString","animation","onComplete","chartInstance","chart","ctx","font","Chart","helpers","fontString","defaults","global","defaultFontSize","defaultFontStyle","defaultFontFamily","textAlign","textBaseline","bars","forEach","dataset","i","controller","getDatasetMeta","bar","fillString","fillText","_model","x","y","chart3Data","chart3Option","drawBorder","categoryPercentage","HorizontalBarChartPage","fontsize","PieChartPage","render","callbacks","tooltipItem","maintainAspectRatio","chart3Options","segment","arc","Dashboard","chart1Data","chart1Option","pointBorderWidth","chart4Data","canvas","gradient","getContext","createLinearGradient","addColorStop","lineTension","data2","App","getChartData","_this2","react_router_dom","Fragment","react_router","exact","path","components_LeftNavBar","style","containerStyle","components_LineChartPage","components_BarChartPage","components_HorizontalBarChartPage","components_PieChartPage","components_Dashboard","height","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc116a5b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport class LineChartPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        function getRandomInt (min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n\r\n        this.state = {\r\n            dataFirstChart: {\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        backgroundColor: \"rgba(191, 63, 63, 0.8)\",\r\n                        data: [ 40, 5, 1, 10, 32, 2, 12]\r\n                    },\r\n                    {\r\n                        label: \"Subscriptions\",\r\n                        backgroundColor: \"rgba(63, 63, 191, 0.6)\",\r\n                        data: [14, 15, 21, 0, 12, 4, 1]\r\n\r\n                    }\r\n                ]\r\n            },\r\n            optionsFirstChart: {\r\n                legend: {\r\n                    position: 'right'\r\n                },\r\n                responsive: true,\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false\r\n                }\r\n            },\r\n            dataSecondChart: {\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\"7\", \"8\", \"9\", \"10\", \"11\",\"12\", \"13\", \"14\", \"15\", \"16\",\"17\", \"18\", \"19\", \"20\", \"21\",\"22\", \"23\", \"24\", \"25\", \"26\",\"27\", \"28\", \"29\", \"30\", \"31\"],\r\n                datasets: [\r\n                    {\r\n                        label: 'May 2017',\r\n                        data: [71,84,330,60,82,97,46,37,47,315,298,180,298,61,333,258,88,68,84,76,78,165,330,362,287,358,386,80,83,398,70],\r\n                        borderWidth: 1,\r\n                        backgroundColor: 'rgba(0,0,0,0.1)'\r\n                    },\r\n                    {\r\n                        label: 'April 2017',\r\n                        data: [83,375,390,272,356,363,426,383,312,94,317,98,104,233,119,111,254,441,406,374,426,260,409,111,377,367,215,104,379,266],\r\n                        borderWidth: 2,\r\n                        backgroundColor: 'rgba(247,205,101,1)'\r\n                    }\r\n                ]\r\n            },\r\n            optionsSecondChart: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false\r\n                },\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    labels: {\r\n                        fontFamily: \"'Lato', sans-serif\",\r\n                        fontSize: 15\r\n                    }\r\n                }\r\n            },\r\n            chartData_3: {\r\n                labels: [\"Décembre 2016\", \"Janvier 2017\", \"Février 2017\", \"Mars 2017\", \"Avril 2017\"],\r\n                datasets: [{\r\n                    label: \"Total\",\r\n                    data: [6275,5199,3846,5510,8425],\r\n                    borderWidth: 0.5,\r\n                    backgroundColor: 'rgba(0,0,0,0.1)'\r\n                },{\r\n                    label: 'Avions hauts',\r\n                    data: [1647,1472,1626,1908,2729],\r\n                    borderWidth: 0.5,\r\n                    backgroundColor: 'rgba(169,110,143,1)'\r\n                },{\r\n                    label: 'Avions bas',\r\n                    data: [4628,3727,2220,3602,5696],\r\n                    borderWidth: 0.5,\r\n                    backgroundColor: 'rgba(219,160,193,1)'\r\n                }\r\n                ]\r\n            },\r\n            chartOptions_3: {\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    labels: {\r\n                        fontFamily: \"'Lato', sans-serif\",\r\n                        fontSize: 15,\r\n                        fontColor: \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n\r\n            chartData_4: {\r\n                labels: [ \"Q3-2013\", \"Q4-2013\", \"Q1-2014\", \"Q2-2014\",\"Q3-2014\", \"Q4-2014\", \"Q1-2015\", \"Q2-2015\",\r\n                    \"Q3-2015\",\r\n                    \"Q4-2015\",\r\n                    \"Q1-2016\",\r\n                    \"Q2-2016\",\r\n                    \"Q3-2016\"\r\n                ],\r\n                datasets: [\r\n                    {\r\n                        type: \"line\",\r\n                        label: \"Data 1\",\r\n                        yAxisID: \"y-axis-1\",\r\n                        backgroundColor: \"#5B89C1\",\r\n                        borderColor: \"#5B89C1\",\r\n                        pointBorderColor: \"#5B89C1\",\r\n                        pointBackgroundColor: \"#FFF\",\r\n                        pointHoverBackgroundColor: \"#FFF\",\r\n                        pointStyle: \"rectRot\",\r\n                        pointRadius: 8,\r\n                        pointHoverRadius: 9,\r\n                        data: [3.4, 3.35, 3.2, 3.6, 3.1, 3.2, 3.35, 3.45, 3.4, 3.4, 3.25, 3.3, 3.45]\r\n                    },\r\n                    {\r\n                        type: \"line\",\r\n                        label: \"Data 2\",\r\n                        yAxisID: \"y-axis-1\",\r\n                        backgroundColor: \"#262626\",\r\n                        borderColor: \"#262626\",\r\n                        fill: false,\r\n                        pointBorderColor: \"#262626\",\r\n                        pointBackgroundColor: \"#FFF\",\r\n                        pointHoverBackgroundColor: \"#FFF\",\r\n                        data: [3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5]\r\n                    }\r\n                ],\r\n\r\n            },\r\n            chartOptions_4: {\r\n                title: {\r\n                    display: true,\r\n                    text: \"Chart Header for Sample 2\"\r\n                },\r\n                legend: {\r\n                    position: \"bottom\"\r\n                },\r\n                hover: {\r\n                    mode: \"point\",\r\n                    intersect: \"true\"\r\n                },\r\n                responsive: true,\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            stacked: true\r\n                        }\r\n                    ],\r\n                    label: [\r\n                        {\r\n                            fontStyle: \"initial\"\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            stacked: false,\r\n                            position: \"left\",\r\n                            id: \"y-axis-1\",\r\n                            gridLines: {\r\n                                drawOnChartArea: true\r\n                            },\r\n                            ticks: {\r\n                                max: 3.7,\r\n                                min: 2.8,\r\n                                stepSize: 0.1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n\r\n\r\n};\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <h2>Linechart Page</h2>\r\n              <Line\r\n                  options={this.state.optionsFirstChart}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.dataFirstChart}\r\n              />\r\n              <h3>Line Chart 2</h3>\r\n              <Line\r\n                  options={this.state.optionsSecondChart}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.dataSecondChart}\r\n              />\r\n\r\n              <h3>Line Chart 3</h3>\r\n              <Line\r\n                  options={this.state.chartOptions_3}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.chartData_3}\r\n              />\r\n              <h3>Line Chart 4</h3>\r\n              <Line\r\n                  options={this.state.chartOptions_4}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.chartData_4}\r\n              />\r\n\r\n\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LineChartPage;","import React, {Component} from 'react';\r\nimport injectSheet  from 'react-jss';\r\n\r\nexport class LeftNavBar extends Component {\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            //<div className='collection' style={navBarStyles}>\r\n            <div className={'collection '+ classes.navBarStyles }>\r\n                <a href=\"/\" className=\"collection-item\">\r\n                    <span className={classes.navSpanStyle + ' center'}>Home/ Overview</span>\r\n                </a>\r\n                <a href=\"/line\" className=\"collection-item\">\r\n                    <i className=\"material-icons\">insert_chart</i>\r\n                    Line Chart\r\n                </a>\r\n                <a href=\"/Bar\" className=\"collection-item\">\r\n                    <i className=\"material-icons\">bar_chart</i>\r\n                    <span>Bar</span>\r\n                </a>\r\n                <a href=\"/horizontal-bar\" className=\"collection-item\">\r\n                    <i className=\"material-icons\">bar_chart</i>\r\n                    <span>Horizontal Bar</span>\r\n                </a>\r\n                <a href=\"/pie\" className=\"collection-item\">\r\n                    <i className=\"material-icons\">bar_chart</i>\r\n                    <span>Pie</span>\r\n                </a><a href=\"/moch-dashboard\" className=\"collection-item\">\r\n                    <span>Analytics Dashboard</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//pointRadius: 15\r\nconst style = {\r\n    navBarStyles: {\r\n        color: '#000',\r\n        position: 'fixed',\r\n        width: '20%',\r\n       '& a': {\r\n            fontFamily: 'Sanserif',\r\n           color: '#efe'\r\n        }\r\n   },\r\n   navSpanStyle: {\r\n       verticalAlign: 'middle'\r\n   }\r\n};\r\n\r\n/*\r\nconst navBarStyles = {\r\n    color: '#000',\r\n  position: 'fixed',\r\n  width: '15%'\r\n};\r\n*/\r\n\r\nexport default injectSheet(style)(LeftNavBar);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\nimport 'chartjs-plugin-labels';\r\n\r\nexport class BarChartPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n        function getRandomInt (min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n\r\n        this.state = {\r\n            data: {\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        backgroundColor: \"rgb(191, 63, 63)\",\r\n                        data: [getRandomInt(50, 200), getRandomInt(20, 50), 27, 10, 32, 2, 12]\r\n                    },\r\n                    {\r\n                        label: \"Subscriptions\",\r\n                        backgroundColor: \"rgb(63, 63, 191)\",\r\n                        data: [159, getRandomInt(50, 200), 10, 12, 4, 1]\r\n\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                tooltips: {\r\n                    enabled: false\r\n                },\r\n                label: {\r\n                    scaleLabel: false\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        fontSize: 0\r\n                    }\r\n                }\r\n            },\r\n            chart2Data: {\r\n                labels: [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\"],\r\n                datasets: [{\r\n                    label: 'Label 1',\r\n                    data: [1550, 1570, 2300, 5000, 7000, 8000, 20000],\r\n                    backgroundColor: '#074F57'\r\n                }, {\r\n                    label: 'Label 2',\r\n                    data: [0, 3630, 28200, 48809, 73700, 110700, 160791],\r\n                    backgroundColor: '#077187'\r\n                }, {\r\n                    label: 'Label 3',\r\n                    data: [0, 0, 0, 0, 0, 20100, 22000],\r\n                    backgroundColor: '#7FB069'\r\n                }]\r\n            },\r\n            chart2Options: {\r\n                tooltips: {\r\n                    enabled: false\r\n                },\r\n                responsive: true,\r\n                legend: {\r\n                    position: 'bottom',\r\n                    fullWidth: true,\r\n                    labels: {\r\n                        boxWidth: 20,\r\n                        padding: 50,\r\n                        fontSize: 20,\r\n                        fontFamily: 'Lato'\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        barPercentage: 0.8,\r\n                        gridLines: {\r\n                            display: true,\r\n                            drawTicks: true,\r\n                            drawOnChartArea: false\r\n                        },\r\n                        ticks: {\r\n                            fontSize: 16,\r\n                            fontFamily: 'Lato'\r\n                        },\r\n                        stacked: true\r\n                    }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            display: true,\r\n                            drawTicks: true,\r\n                            tickMarkLength: 5,\r\n                            drawOnChartArea: false\r\n                        },\r\n                        ticks: {\r\n                            padding: 10,\r\n                            beginAtZero: true,\r\n                            fontSize: 16,\r\n                            fontFamily: 'Lato',\r\n                            callback: function(label, index, labels) {\r\n                                return label/1000;\r\n                            }\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            padding: 20,\r\n                            fontColor: '#555759',\r\n                            fontSize: 18,\r\n                            fontFamily: 'Lato',\r\n                            fontStyle: 700,\r\n                            labelString: 'Scale Label'\r\n                        },\r\n                        stacked: true\r\n                    }]\r\n                },\r\n                animation: {\r\n                    onComplete: function() {\r\n                        var chartInstance = this.chart,\r\n                            ctx = chartInstance.ctx;\r\n                        ctx.font = Chart.helpers.fontString(\r\n                            Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily\r\n                        );\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'bottom';\r\n                        var bars = [0, 0, 0, 0, 0, 0, 0]\r\n                        this.data.datasets.forEach(\r\n                            function(dataset, i) {\r\n                                var meta = chartInstance.controller.getDatasetMeta(i);\r\n                                meta.data.forEach(function(bar, index) {\r\n                                    var data = dataset.data[index];\r\n                                    bars[index] += data;\r\n                                    if(i === 2 && index > 2) {\r\n                                        var fillString = '$' + Math.floor(bars[index]/1000);\r\n                                        if( bars[index] > 1000000) {\r\n                                            fillString += ' Billion';\r\n                                        } else {\r\n                                            fillString += ' Million';\r\n                                        }\r\n                                        ctx.fillText(fillString, bar._model.x, bar._model.y - 5);\r\n                                    }\r\n                                });\r\n                            });\r\n\r\n                    }\r\n                },\r\n            plugins: {\r\n                labels: {\r\n                    fontSize: 0\r\n                }\r\n            }\r\n            },\r\n            chart3Data: {\r\n                labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n                datasets: [{\r\n                    label: '',\r\n                    data: [5, 6, 4.5, 5.5, 3, 6,4.5,6,8,3,5.5,4],\r\n                    backgroundColor: '#4c84ff',\r\n                }]\r\n            },\r\n            chart3Option: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            display:false\r\n                        },\r\n                        ticks: {\r\n                            display:false, // hide main x-axis line\r\n                            beginAtZero:false\r\n                        },\r\n                        barPercentage: 1.8,\r\n                        categoryPercentage: 0.2\r\n                    }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            drawBorder: false, // hide main y-axis line\r\n                            display:false\r\n                        },\r\n                        ticks: {\r\n                            display:false,\r\n                            beginAtZero:true\r\n                        },\r\n                    }]\r\n                },\r\n                tooltips: {\r\n                    enabled: false\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        fontSize: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <h2>Barchart Page</h2>\r\n              <Bar\r\n                  options={this.state.options}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.data}\r\n              />\r\n\r\n              <h3>Barchart 2</h3>\r\n              <Bar\r\n                  options={this.state.chart2Options}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.chart2Data}\r\n              />\r\n\r\n              <h3>Barchart 3</h3>\r\n              <p>Completely clean</p>\r\n              <Bar\r\n                  options={this.state.chart3Option}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.chart3Data}\r\n              />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BarChartPage;","import React, {Component} from 'react';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\n\r\nexport class HorizontalBarChartPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n        function getRandomInt (min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n\r\n        this.state = {\r\n            data: {\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        backgroundColor: \"rgb(191, 63, 63)\",\r\n                        data: [getRandomInt(50, 200), 5, 1, 10, 32, 2, 12]\r\n                    },\r\n                    {\r\n                        label: \"Subscriptions\",\r\n                        backgroundColor: \"rgb(63, 63, 191)\",\r\n                        data: [14, 15, 21, 0, 12, 4, 1]\r\n\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                tooltips: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            chart2Data: {\r\n                labels: [\"Agent Name A\",\r\n                    \"Agent Name B\",\r\n                    \"Agent Name C\",\r\n                    \"Agent Name D\",\r\n                    \"Agent Name E\",\r\n                    \"Agent Name F\",\r\n                    \"Agent Name G\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"In Progress\",\r\n                        data: [65, 59, 80, 81, 56, 55, 40],\r\n                        backgroundColor: \"#22495d\"\r\n                    },\r\n                    {\r\n                        label: \"Application Lodged\",\r\n                        data: [28, 48, 40, 19, 86, 27, 90],\r\n                        backgroundColor: \"#547b8f\"\r\n                    },\r\n                    {\r\n                        label: \"New\",\r\n                        data: [65, 59, 80, 81, 56, 55, 40],\r\n                        backgroundColor: \"#7fb2cc\"\r\n                    },\r\n                    {\r\n                        label: \"Letter of Offer Declined\",\r\n                        data: [28, 48, 40, 19, 86, 27, 90],\r\n                        backgroundColor: \"#a8559d\"\r\n                    },\r\n                    {\r\n                        label: \"Letter of Offer Confirmed\",\r\n                        data: [65, 59, 80, 81, 56, 55, 40],\r\n                        backgroundColor: \"#76316d\"\r\n                    }\r\n                ]\r\n            },\r\n            chart2Options: {\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            stacked: true,\r\n                            gridLines: {\r\n                                display: false\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            barPercentage: 0.5,\r\n                            stacked: true,\r\n                            gridLines: {\r\n                                display: false\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    fontsize: 14,\r\n                    text: \"Applications 2100\"\r\n                },\r\n                legend: {\r\n                    display: true,\r\n                    position: \"bottom\"\r\n                },\r\n                tooltips: {\r\n                    enabled: true,\r\n                    mode: 'nearest'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Horizontal Bar Chart </h3>\r\n                <HorizontalBar\r\n                    options={this.state.options}\r\n                    //data={this.state.data} this was passing in a data prop\r\n                    data={this.state.data}\r\n                />\r\n                <h3>Horizontal Bar Chart 2 </h3>\r\n                <HorizontalBar\r\n                    options={this.state.chart2Options}\r\n                    //data={this.state.data} this was passing in a data prop\r\n                    data={this.state.chart2Data}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HorizontalBarChartPage;","import React, {Component} from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nexport class PieChartPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n\r\n        function getRandomInt (min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n\r\n        this.state = {\r\n            data: {\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        backgroundColor: \"rgb(191, 63, 63)\",\r\n                        data: [10, 5, 1, 10, 32, 2, 12]\r\n                    },\r\n                    {\r\n                        label: \"Subscriptions\",\r\n                        backgroundColor: \"rgb(63, 63, 191)\",\r\n                        data: [14, 15, 21, 0, 12, 4, 1]\r\n\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                tooltips: {\r\n                    enabled: true\r\n                },\r\n                labels: {\r\n                    display: true\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        render: 'value',\r\n                        fontSize: 25,\r\n                        fontColor: '#fff'\r\n                    }\r\n                }\r\n            },\r\n            chart2Data: {\r\n                labels: [\"In Progress\",\r\n                    \"Application Lodged\",\r\n                    \"New\",\r\n                    \"Letter of Offer Declined\",\r\n                    \"Letter of Offer Confirmed\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        data: [12, 12, 8, 20, 38],\r\n                        backgroundColor: [\r\n                            \"#22495d\",\r\n                            \"#547b8f\",\r\n                            \"#7fb2cc\",\r\n                            \"#a8559d\",\r\n                            \"#76316d\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            chart2Options: {\r\n                tooltips: {\r\n                    mode: \"label\",\r\n                    callbacks: {\r\n                        label: function(tooltipItem, data) {\r\n                            return data.datasets[0].data[tooltipItem.index] + \"%\";\r\n                        }\r\n                    }\r\n                },\r\n                maintainAspectRatio: true,\r\n                responsive: true,\r\n                title: {\r\n                    display: true,\r\n                    fontsize: 14,\r\n                    text: \"Applications 2100\"\r\n                },\r\n                legend: {\r\n                    display: true,\r\n                    position: \"bottom\"\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        render: 'label',\r\n                        fontSize: 20,\r\n                        fontColor: '#000',\r\n                        position: 'outside'\r\n                    }\r\n                }\r\n            },\r\n            chart3Data: {\r\n                labels: [\"February\", \"March\", \"April\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        data: [getRandomInt(1, 20), getRandomInt(1, 10), getRandomInt(1, 20)],\r\n                        backgroundColor: ['#ffce56', '#ff6384', '#36a2eb' ]\r\n                    }\r\n                ]\r\n            },\r\n            chart3Options: {\r\n                responsive: true,\r\n                tooltips: {\r\n                    enabled: false\r\n                },\r\n                labels: {\r\n                    display: true\r\n                },\r\n                plugins: {\r\n                    labels: [{\r\n                        render: 'percentage',\r\n                        fontSize: 25,\r\n                        fontColor: '#fff'\r\n                    },{\r\n                        render: 'label',\r\n                        fontSize: 25,\r\n                        fontColor: '#000',\r\n                        position: 'outside',\r\n                        segment: true,\r\n                        arc: true\r\n                    }\r\n                    ]\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <h3>Chart 1</h3>\r\n              <Pie\r\n                  options={this.state.options}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.data}\r\n              />\r\n\r\n              <h3>Chart 2</h3>\r\n              <Pie\r\n                  options={this.state.chart2Options}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.chart2Data}\r\n              />\r\n\r\n              <h3>Chart 3</h3>\r\n              <Pie\r\n                  options={this.state.chart3Options}\r\n                  //data={this.state.data} this was passing in a data prop\r\n                  data={this.state.chart3Data}\r\n              />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PieChartPage;","import React, {Component} from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\n\r\nexport class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chart1Data: {\r\n                    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n                    datasets: [{\r\n                            label: '',\r\n                            data: [5, 6, 4.5, 5.5, 3, 6, 4.5, 6, 8, 3, 5.5, 4],\r\n                            backgroundColor: '#4c84ff',\r\n                        }]\r\n                },\r\n            chart1Option: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            display:false\r\n                        },\r\n                        ticks: {\r\n                            display:false, // hide main x-axis line\r\n                            beginAtZero:false\r\n                        },\r\n                        barPercentage: 1.8,\r\n                        categoryPercentage: 0.2\r\n                    }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            drawBorder: false, // hide main y-axis line\r\n                            display:false\r\n                        },\r\n                        ticks: {\r\n                            display:false,\r\n                            beginAtZero:true\r\n                        },\r\n                    }]\r\n                },\r\n                tooltips: {\r\n                    enabled: true\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        fontSize: 0\r\n                    }\r\n                }\r\n            },\r\n            chart2Data: {\r\n                labels:[\"Fri\",\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\r\n                datasets: [{\r\n                    label: \"My First dataset\",\r\n                    pointRadius: 4,\r\n                    pointBackgroundColor: 'rgba(255,255,255,1)',\r\n                    pointBorderWidth: 2,\r\n                    fill: false,\r\n                    backgroundColor: 'transparent',\r\n                    borderColor: '#fdc506',\r\n                    data: [0,4, 3, 5.5, 3, 4.7, 0]\r\n                }, {\r\n                    label: \"My Second dataset\",\r\n                    fill: false,\r\n                    pointRadius: 4,\r\n                    pointBackgroundColor: 'rgba(255,255,255,1)',\r\n                    pointBorderWidth: 2,\r\n                    backgroundColor: 'transparent',\r\n                    borderColor: '#4c84ff',\r\n                    data: [0,2,4.3,3.8,5.2,1.8,2.2],\r\n                }]\r\n            },\r\n            chart2Options: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            display:false\r\n                        },\r\n                        ticks: {\r\n                            display:false, // hide main x-axis line\r\n                            beginAtZero:true\r\n                        },\r\n                        barPercentage: 1.8,\r\n                        categoryPercentage: 0.2\r\n                    }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            drawBorder: false, // hide main y-axis line\r\n                            display:false\r\n                        },\r\n                        ticks: {\r\n                            display:false,\r\n                            beginAtZero:true\r\n                        },\r\n                    }]\r\n                },\r\n                tooltips: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            chart3Data: {\r\n                labels:[\"Fri\",\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\r\n                datasets: [{\r\n                    label: \"My First dataset\",\r\n                    pointRadius: 0,\r\n                    fill: true,\r\n                    backgroundColor: 'rgba(76, 132, 255, 0.9)',\r\n                    borderColor: 'rgba(76, 132, 255, 0.9)',\r\n                    data: [0,4, 2, 6.5, 3, 4.7, 0]\r\n                }, {\r\n                    label: \"My Second dataset\",\r\n                    pointRadius: 0,\r\n                    fill: true,\r\n                    backgroundColor: 'rgba(253, 197, 6, 0.9)',\r\n                    borderColor: 'rgba(253, 197, 6, 1)',\r\n                    data: [0,2,4.3,3.8,5.2,1.8,2.2],\r\n                }]\r\n            },\r\n            chart4Data: {\r\n\r\n            }\r\n        }\r\n\r\n        // Adding a gradient to my chart data\r\n        this.data = (canvas) => {\r\n            const ctx = canvas.getContext(\"2d\")\r\n            const gradient = ctx.createLinearGradient(0,10,1000,20);\r\n            gradient.addColorStop(0, \"rgba(41,204,151,0.10196)\");\r\n            gradient.addColorStop(1, \"rgba(41,204,151,0.30196)\");\r\n            return {\r\n                labels:[\"Fri\",\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\r\n                datasets: [{\r\n                    label: \"My First dataset\",\r\n                    lineTension: 0,\r\n                    pointRadius: 4,\r\n                    pointBackgroundColor: 'rgba(255,255,255,1)',\r\n                    pointBorderWidth: 2,\r\n                    fill: true,\r\n                    backgroundColor: gradient,\r\n                    borderColor: '#29cc97',\r\n                    borderWidth: 2,\r\n                    data: [0, 4, 3, 5.5, 3, 4.7, 1]\r\n                }]\r\n            }\r\n        }\r\n\r\n        this.data2 = (canvas) => {\r\n            const ctx = canvas.getContext(\"2d\")\r\n            const gradient = ctx.createLinearGradient(0,600,0,0);\r\n            gradient.addColorStop(0, \"rgba(0,0,255,0.3)\");\r\n            gradient.addColorStop(1, \"rgba(0,0,255,0.8)\");\r\n            return {\r\n                labels:[\"January\",\"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\"],\r\n                datasets: [{\r\n                    label: \"My First dataset\",\r\n                    lineTension: 0.5,\r\n                    pointRadius: 4,\r\n                    pointBackgroundColor: 'rgb(66,136,253)',\r\n                    pointBorderWidth: 2,\r\n                    fill: true,\r\n                    backgroundColor: gradient,\r\n                    borderWidth: 5,\r\n                    data: [0, 4, 3, 5.5, 3, 4.7, 1, 7]\r\n                }]\r\n            }\r\n        }\r\n\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Hello from dashboard</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col s3\"><div className=\"card-panel white\">\r\n                        <h5>71, 503</h5>\r\n                        <p>Online Signups</p>\r\n                        <Bar\r\n                            data={this.state.chart1Data}\r\n                            options={this.state.chart1Option}\r\n                            // this was passing in a data prop\r\n                        />\r\n                    </div></div>\r\n                    <div className=\"col s3\"><div className=\"card-panel white lighten-2\">\r\n                        <h5>71, 503</h5>\r\n                        <p>Online Signups</p>\r\n                        <Line\r\n                            data={this.state.chart2Data}\r\n                            options={this.state.chart2Options}\r\n                            // this was passing in a data prop\r\n                        />\r\n                    </div></div>\r\n                    <div className=\"col s3\"><div className=\"card-panel green\">\r\n                        <h5>71, 503</h5>\r\n                        <p>Online Signups</p>\r\n                        <Line\r\n                            data={this.state.chart3Data}\r\n                            options={this.state.chart2Options}\r\n                            // this was passing in a data prop\r\n                        />\r\n                    </div></div>\r\n                    <div className=\"col s3\"><div className=\"card-panel white\">\r\n                        <h5>71, 503</h5>\r\n                        <p>Online Signups</p>\r\n                        <Line\r\n                            data={this.data}\r\n                            options={this.state.chart2Options}\r\n                            // this was passing in a data prop\r\n                        />\r\n                    </div></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s4\"><div className=\"card-panel white\">\r\n                        <div className=\"icon-box\">\r\n                        <span>\r\n                        <i className=\"material-icons\">insert_chart</i>\r\n                        Subscribers</span>\r\n                        <span>2,543</span>\r\n                        </div>\r\n                    </div></div>\r\n                    <div className=\"col s4\"><div className=\"card-panel white\">\r\n                        <div className=\"icon-box\">\r\n                        <span>\r\n                        <i className=\"material-icons\">thumb_up</i>\r\n                        Likes</span>\r\n                            <span>2,543</span>\r\n                        </div>\r\n                    </div></div>\r\n                    <div className=\"col s4\"><div className=\"card-panel white\">\r\n                        <div className=\"icon-box\">\r\n                        <span>\r\n                        <i className=\"material-icons\">speaker_notes</i>\r\n                        Comments</span>\r\n                            <span>2,543</span>\r\n\r\n                        </div>\r\n                    </div></div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\"><div className=\"card-panel white\">\r\n                        <Line\r\n                            data={this.data2}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s3\"><div className=\"card-panel white\">\r\n\r\n                        <h5>Quick Tip</h5>\r\n                        <p>Lourem ipsum test text for you see and never read</p>\r\n                    </div></div>\r\n                    <div className=\"col s3\"><div className=\"card-panel white\">\r\n\r\n                        <h5>Monthly Revenue</h5>\r\n                        <p>Lourem ipsum test text for you see and never read</p>\r\n                    </div></div>\r\n                    <div className=\"col s6\"><div className=\"card-panel white\">\r\n\r\n                        <h5>Recent Uploads</h5>\r\n                        <p>Lourem ipsum test text for you see and never read</p>\r\n                    </div></div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, {Component} from 'react';\r\nimport { Line, Bar, Doughnut, HorizontalBar, Pie  } from 'react-chartjs-2';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport LineChartPage from \"./components/LineChartPage\";\r\nimport LeftNavBar from \"./components/LeftNavBar\";\r\nimport BarChartPage from \"./components/BarChartPage\";\r\nimport HorizontalBarChartPage from \"./components/HorizontalBarChartPage\";\r\nimport PieChartPage from \"./components/PieChartPage\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\n// Theres a new boss in town\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Videos Made\",\r\n                        backgroundColor: \"rgba(166,61,91, 0.7)\", // Add color with opacity as the final value\r\n                        data: [4, 5, 1, 10, 32, 2, 12]\r\n                    },\r\n                    {\r\n                        label: \"Subscriptions\",\r\n                        backgroundColor: \"rgba(255,115,64,0.7)\",\r\n                        data: [14, 15, 21, 0, 12, 4, 1]\r\n\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                tooltips: {\r\n                    mode: 'nearest',\r\n                    intersect: false\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // Function here would be uses for data manipulation if need be\r\n    getChartData = canvas => {\r\n        const data = this.state.data;\r\n\r\n        return data;\r\n    }\r\n\r\n  render() {\r\n      return (\r\n          <Router>\r\n              <>\r\n\r\n              <Route exact path=\"/\" render={() =>(\r\n                  <div className=\"row\">\r\n                      <div className=\"col s3 offset-s2\">\r\n                          <LeftNavBar />\r\n                      </div>\r\n                      <div className=\"col s6\">\r\n                  <div style={containerStyle}>\r\n                      <h2>Charts Js Samples</h2>\r\n                      <h4>Line Chart</h4>\r\n                      <Line\r\n                          options={this.options}\r\n                          //data={this.state.data} this was passing in a data prop\r\n                          data={this.getChartData}\r\n                      />\r\n\r\n                      <h4>Bar Chart</h4>\r\n                      <Bar\r\n                          options={this.options}\r\n                          //data={this.state.data} this was passing in a data prop\r\n                          data={this.getChartData}\r\n                      />\r\n\r\n                      <h4>Horizontal Bar Chart</h4>\r\n                      <HorizontalBar\r\n                          options={this.options}\r\n                          //data={this.state.data} this was passing in a data prop\r\n                          data={this.getChartData}\r\n                      />\r\n\r\n                      <h4>Doughnut Chart</h4>\r\n                      <Doughnut\r\n                          options={this.options}\r\n                          //data={this.state.data} this was passing in a data prop\r\n                          data={this.getChartData}\r\n                      />\r\n                  </div>\r\n                      </div>\r\n                  </div>\r\n              )}/>\r\n\r\n              <Route exact path=\"/line\" render={() =>(\r\n                  <div className=\"row\">\r\n                      <div className=\"col s3 offset-s2\">\r\n                          <LeftNavBar />\r\n                      </div>\r\n                      <div className=\"col s6\">\r\n                          <LineChartPage />\r\n                      </div>\r\n                  </div>\r\n              )}/>\r\n\r\n              <Route exact path=\"/bar\" render={() =>(\r\n                  <div className=\"row\">\r\n                      <div className=\"col s3 offset-s2\">\r\n                          <LeftNavBar />\r\n                      </div>\r\n                      <div className=\"col s6\">\r\n                          <BarChartPage />\r\n                      </div>\r\n                  </div>\r\n              )}/>\r\n\r\n              <Route exact path=\"/horizontal-bar\" render={() =>(\r\n                  <div className=\"row\">\r\n                      <div className=\"col s3 offset-s2\">\r\n                          <LeftNavBar />\r\n                      </div>\r\n                      <div className=\"col s6\">\r\n                          <h3>Horizontal Bar Chart</h3>\r\n                          <div className=\"ibox-content\">\r\n                          <HorizontalBarChartPage />\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              )}/>\r\n\r\n              <Route exact path=\"/pie\" render={() =>(\r\n                  <div className=\"row\">\r\n                      <div className=\"col s3 offset-s2\">\r\n                          <LeftNavBar />\r\n                      </div>\r\n                      <div className=\"col s6\">\r\n                          <h3>Pie Chart</h3>\r\n                          <div className=\"ibox-content\">\r\n                            <PieChartPage />\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              )}/>\r\n\r\n              <Route exact path=\"/moch-dashboard\" render={() =>(\r\n                  <div className=\"row\">\r\n                      <div className=\"col s1\">\r\n                          <LeftNavBar />\r\n                      </div>\r\n                      <div className=\"col s8 offset-s2\">\r\n                          <h3>Dashboard Overview</h3>\r\n                            <Dashboard />\r\n\r\n                      </div>\r\n                  </div>\r\n              )}/>\r\n              </>\r\n\r\n          </Router>\r\n      );\r\n  }\r\n}\r\n\r\nconst containerStyle ={\r\n    position: \"relative\",\r\n    width: 600,\r\n    height: 550,\r\n    textAlign: '-webkit-center'\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}